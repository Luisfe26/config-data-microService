server:
  port: 8090
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    hostname: localhost

zuul:
  #default-filters:
    #TokenRealy
  routes:
    clientservice:
      path: /person/**
      serviceId: client-service
      uri: lb://client-service
      stripPrefix: true
      sensitiveHeaders:
      #filters:
       # RemoveRequestHeader=Cookie
    orderpurchaseservice:
      path: /orderspurchase/**
      serviceId: ordersPurchase-service
      uri: lb://ordersPurchase-service
    ordersalesservice:
      path: /orderssales/**
      serviceId: ordersSales-service
      uri: lb://ordersSales-service

ribbon:
   ReadTimeout: 60000
   connection-timeout: 3000
#spring:
#  securuty:
#    oauth2:
#      client:
#        povider:
#         keycloak:
#            authorization-uri: http://localhost:8080/realms/microservise/protocol/openid-connect/auth
#            useriinfo-uri: http://localhost:8080/realms/microservise/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username
#            token-uri: http://localhost:8080/realms/microservise/protocol/openid-connect/token
#        registration:
#          microservice-client:
#            provider: keycloak
#            client-id: microservice-client
#            client-secret: TKsnLibVcizZwuPXMcneFKtU6XN9E0IF
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/login/oauth2/code/microservice-client"